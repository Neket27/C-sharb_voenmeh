@startuml

abstract class Drink
{
    - string country { get; set; }
    - double volume { get; set; }
    - char degree { get; set; }
    - int year { get; set; }

    + virtual void Start();
    + override string ToString();
}

class Wine 
{
   - string redOrWhite { get; set; }
   - string dryOrSweet { get; set; }
   
    + override void Start();   
    + string ViewingLightReflection(string value);
    + string DrinkLittle();
    + string EstimateSmell(string value); 
    + static void ListenMinistryOfHealth(string text);
    + override string ToString();
}

class IcedTea
{
    - string typeTea { get; set; }
    
    + void ReadinessTea()
    +override string ToString()
}

class Beer
{
    - string bottleVolume { get; set; }
    - string lightAndDark { get; set; }
    
    + string Feesdback(string feesdback);
    + override string ToString()
}


class Champange
{
    - int alcohol { get; set; }
    - string excerpt { get; set; }
    
    + void InvitationOnFactory()
    + override string ToString()
}

class Cocktail
{
    - bool withMilk { get; set; }
    - bool alcoholic { get; set; }
    - string taste { get; set; }
    
    + override string ToString()
}

class Coffee
{
    - string title { get; set; }
    - bool withLeker { get; set; }
    
    + override string ToString()
}

interface IReflector
{
    void Start();
}

class Prism
{
    + void Start();
}

Drink --|> Wine
Drink --|> IcedTea
Drink --|> Beer
Drink --|> Champange
Drink --|> Cocktail
Drink --|> Coffee
IReflector --|> Prism
IReflector --|> Drink

@enduml